'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.removeLocalUser = exports.storeLocalUser = undefined;
exports.fetchUser = fetchUser;
exports.refresh = refresh;
exports.login = login;

var _isomorphicFetch = require('isomorphic-fetch');

var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fetchUser(token) {
	return (0, _isomorphicFetch2.default)(SERVER_URL + '/auth/user', {
		method: 'GET',
		headers: {
			Accept: 'application/json',
			'Content-Type': 'application/json; charset=utf-8',
			Authorization: token
		}
	}).then(function (response) {
		if (response.ok) {
			return response.json();
		}
		return;
	});
}

function refresh(token) {
	return (0, _isomorphicFetch2.default)(SERVER_URL + '/auth/refresh', {
		method: 'GET',
		headers: {
			Accept: 'application/json',
			'Content-Type': 'application/json; charset=utf-8',
			Authorization: token
		}
	}).then(function (response) {
		if (response.ok) {
			return response.json();
		}
		return;
	});
}

function login(data) {
	var username = data.login,
	    password = data.password,
	    rememberMe = data.rememberMe;

	return (0, _isomorphicFetch2.default)(SERVER_URL + '/auth/login', {
		method: 'POST',
		headers: {
			'Accept': 'application/json',
			'Content-Type': 'application/json'
		},
		body: JSON.stringify({
			username: username,
			password: password,
			rememberMe: rememberMe
		})
	}).then(function (response) {
		if (response.ok) {
			return response.json();
		}
		return;
	});
}

var storeLocalUser = exports.storeLocalUser = function storeLocalUser(_ref) {
	var token = _ref.token;

	localStorage.setItem('token', token);
};

var removeLocalUser = exports.removeLocalUser = function removeLocalUser() {
	localStorage.removeItem('token');
};