'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.RightBottomFixedButton = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FloatingActionButton2 = require('material-ui/FloatingActionButton');

var _FloatingActionButton3 = _interopRequireDefault(_FloatingActionButton2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = {
	position: 'fixed',
	bottom: '25px',
	right: '120px',
	zIndex: 999
};

var RightBottomFixedButton = exports.RightBottomFixedButton = function (_FloatingActionButton) {
	_inherits(RightBottomFixedButton, _FloatingActionButton);

	function RightBottomFixedButton() {
		_classCallCheck(this, RightBottomFixedButton);

		return _possibleConstructorReturn(this, (RightBottomFixedButton.__proto__ || Object.getPrototypeOf(RightBottomFixedButton)).apply(this, arguments));
	}

	_createClass(RightBottomFixedButton, [{
		key: 'render',
		value: function render() {
			return _react2.default.createElement(_FloatingActionButton3.default, _extends({ style: style }, this.props));
		}
	}]);

	return RightBottomFixedButton;
}(_FloatingActionButton3.default);

RightBottomFixedButton.propTypes = {
	children: _react.PropTypes.node
};

exports.default = RightBottomFixedButton;