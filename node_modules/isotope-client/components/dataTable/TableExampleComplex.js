'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _keyboardArrowLeft = require('material-ui/svg-icons/hardware/keyboard-arrow-left');

var _keyboardArrowLeft2 = _interopRequireDefault(_keyboardArrowLeft);

var _keyboardArrowRight = require('material-ui/svg-icons/hardware/keyboard-arrow-right');

var _keyboardArrowRight2 = _interopRequireDefault(_keyboardArrowRight);

var _arrowDownward = require('material-ui/svg-icons/navigation/arrow-downward');

var _arrowDownward2 = _interopRequireDefault(_arrowDownward);

var _arrowUpward = require('material-ui/svg-icons/navigation/arrow-upward');

var _arrowUpward2 = _interopRequireDefault(_arrowUpward);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _SelectField = require('material-ui/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _Table = require('material-ui/Table');

var _IsotopeTableMenu = require('../table/IsotopeTableMenu');

var _IsotopeTableMenu2 = _interopRequireDefault(_IsotopeTableMenu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/* eslint-disable max-len */

var ASC = 'ASC';
var DESC = 'DESC';
var START_ORDER = ASC;

var getStyles = function getStyles(muiTheme) {
	return {
		tableHeaderCol: {
			color: muiTheme.palette.accent1Color,
			fontWeight: '600',
			fontSize: 15,
			cursor: 'pointer'
		},
		arrow: {
			color: muiTheme.palette.accent1Color,
			height: 15,
			width: 15,
			paddingLeft: 7,
			position: 'absolute',
			top: 21,
			left: 0
		},
		tableRowCol: {
			color: muiTheme.palette.accent1Color,
			paddingTop: 10,
			paddingBottom: 20,
			position: 'relative',
			float: 'right',
			width: '100%'
		},
		hArrow: {
			verticalAlign: 'middle',
			paddingLeft: 10,
			paddingRight: 10
		},
		perPage: {
			fontSize: 13,
			letterSpacing: '0.015em',
			textAlign: 'right'
		},
		select: {
			color: muiTheme.palette.accent1Color,
			width: 50,
			marginLeft: 20,
			position: 'relative',
			top: 5,
			fontSize: 14
		}
	};
};

/**
 * On s'assure que la pageSize demandée fait partie des pageSizes proposées.
 *
 * @param pageSizes
 * @param pageSize
 * @returns {*}
 */
var adjustPageSizes = function adjustPageSizes(pageSizes, pageSize) {
	if (pageSizes.indexOf(pageSize) >= 0) {
		return pageSizes;
	}
	return [].concat(_toConsumableArray(pageSizes), [pageSize]).sort(function (a, b) {
		return a - b;
	});
};

/**
 * Méthode utilitaire qui réalise le rendu d'une cellule de la data table.
 * @param colDef
 * @param data
 * @param rowIndex
 * @returns {*}
 */
var renderBodyCell = function renderBodyCell(colDef, data, rowIndex, cellIndex) {
	if (typeof colDef.render === 'function') {
		var component = colDef.render(data, rowIndex, cellIndex);
		if (_react2.default.isValidElement(component) && component.type === _Table.TableRowColumn) {
			return component;
		}
		return _react2.default.createElement(
			_Table.TableRowColumn,
			colDef.tableHeaderColumnProps,
			component
		);
	}
	return _react2.default.createElement(
		_Table.TableRowColumn,
		colDef.tableHeaderColumnProps,
		colDef.component || data[colDef.key]
	);
};

var getDefaultTableProps = function getDefaultTableProps() {
	var showCheckboxes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	var layoutAuto = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	return {
		tableProps: {
			height: 'auto',
			fixedHeader: !layoutAuto,
			fixedFooter: true,
			selectable: showCheckboxes,
			multiSelectable: false,
			style: {
				tableLayout: layoutAuto ? 'auto' : 'fixed'
			}
		},
		tableHeaderProps: {
			displaySelectAll: showCheckboxes,
			adjustForCheckbox: showCheckboxes,
			enableSelectAll: false
		},
		tableBodyProps: {
			displayRowCheckbox: showCheckboxes,
			deselectOnClickaway: true,
			showRowHover: false,
			stripedRow: false
		}
	};
};

var getTableProps = function getTableProps() {
	var tableProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var tableHeaderProps = arguments[1];
	var tableBodyProps = arguments[2];

	var _getDefaultTableProps = getDefaultTableProps(tableProps.selectable, true),
	    defaultTableProps = _getDefaultTableProps.tableProps,
	    defaultTableHeaderProps = _getDefaultTableProps.tableHeaderProps,
	    defaultTableBodyProps = _getDefaultTableProps.tableBodyProps;

	return {
		tableProps: _extends({}, defaultTableProps, tableProps),
		tableHeaderProps: _extends({}, defaultTableHeaderProps, tableHeaderProps),
		tableBodyProps: _extends({}, defaultTableBodyProps, tableBodyProps)
	};
};

var TableExampleComplex = function (_Component) {
	_inherits(TableExampleComplex, _Component);

	function TableExampleComplex(props) {
		_classCallCheck(this, TableExampleComplex);

		var _this = _possibleConstructorReturn(this, (TableExampleComplex.__proto__ || Object.getPrototypeOf(TableExampleComplex)).call(this, props));

		_this.handlePreviousPage = _this.handlePreviousPage.bind(_this);
		_this.handleNextPage = _this.handleNextPage.bind(_this);
		_this.handleTableHeaderClick = _this.handleTableHeaderClick.bind(_this);
		_this.handleSizeChange = _this.handleSizeChange.bind(_this);
		_this.state = {};
		return _this;
	}

	_createClass(TableExampleComplex, [{
		key: 'handleTableHeaderClick',
		value: function handleTableHeaderClick(property) {
			var _props = this.props,
			    sort = _props.sort,
			    onFilterChange = _props.onFilterChange;

			if (typeof sort !== 'undefined' && sort !== null && sort[0].property === property) {
				var direction = sort[0].direction === ASC ? DESC : ASC;
				// TODO
				if (onFilterChange) {
					onFilterChange(property, direction);
				}
			} else {
				// TODO
				if (onFilterChange) {
					onFilterChange(property, START_ORDER);
				}
			}
		}

		/**
   * page number is already -1 (start at 0)
   */

	}, {
		key: 'handlePreviousPage',
		value: function handlePreviousPage() {
			var _props2 = this.props,
			    page = _props2.page,
			    onPageChange = _props2.onPageChange;

			if (page > 1) {
				// TODO utiliser first ?
				if (onPageChange) {
					onPageChange(page - 1);
				}
			}
		}

		/**
   * +1 to have page number and +1 again to get the next page
   */

	}, {
		key: 'handleNextPage',
		value: function handleNextPage() {
			var _props3 = this.props,
			    page = _props3.page,
			    totalPages = _props3.totalPages,
			    onPageChange = _props3.onPageChange;
			// TODO utiliser last ?

			if (page + 1 <= totalPages) {
				if (onPageChange) {
					onPageChange(page + 1);
				}
			}
		}
	}, {
		key: 'handleSizeChange',
		value: function handleSizeChange(event, index, value) {
			var onElementsPerPageChange = this.props.onElementsPerPageChange;

			if (onElementsPerPageChange) {
				onElementsPerPageChange(value);
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props4 = this.props,
			    data = _props4.data,
			    page = _props4.page,
			    pageSize = _props4.pageSize,
			    headers = _props4.headers,
			    firstPage = _props4.firstPage,
			    lastPage = _props4.lastPage,
			    totalElements = _props4.totalElements,
			    totalPages = _props4.totalPages,
			    pageSizes = _props4.pageSizes,
			    makeActions = _props4.makeActions,
			    showActions = _props4.showActions,
			    tableProps = _props4.tableProps,
			    tableHeaderProps = _props4.tableHeaderProps,
			    tableBodyProps = _props4.tableBodyProps,
			    paginationAlign = _props4.paginationAlign;

			var computedTableProps = getTableProps(tableProps, tableHeaderProps, tableBodyProps);
			// TODO rename
			var pageSizes2 = adjustPageSizes(pageSizes, pageSize);
			var nbCols = headers.length + (showActions ? 1 : 0);

			var muiTheme = this.context.muiTheme;

			var styles = getStyles(muiTheme);
			var NumberOfElementInf = (page - 1) * pageSize + 1;
			var NumberOfElementSup = Math.min(pageSize * page, totalElements);
			return _react2.default.createElement(
				_Table.Table,
				computedTableProps.tableProps,
				_react2.default.createElement(
					_Table.TableHeader,
					computedTableProps.tableHeaderProps,
					_react2.default.createElement(
						_Table.TableRow,
						null,
						headers.map(function (column) {
							return _react2.default.createElement(
								_Table.TableHeaderColumn,
								_extends({}, column.tableHeaderColumnProps, { key: column.key, style: styles.tableHeaderCol }),
								column.sortable ? _react2.default.createElement(
									'span',
									{
										onClick: function onClick() {
											_this2.handleTableHeaderClick(column.key);
										}
									},
									column.name,
									column.sorted === ASC && _react2.default.createElement(_arrowUpward2.default, { style: styles.arrow }),
									column.sorted === DESC && _react2.default.createElement(_arrowDownward2.default, { style: styles.arrow })
								) : _react2.default.createElement(
									'span',
									null,
									column.name
								)
							);
						}),
						showActions && _react2.default.createElement(
							_Table.TableHeaderColumn,
							{ style: styles.tableHeaderCol },
							_react2.default.createElement(
								'span',
								null,
								'\xA0'
							)
						)
					)
				),
				_react2.default.createElement(
					_Table.TableBody,
					computedTableProps.tableBodyProps,
					data.map(function (row, rowIndex) {
						return _react2.default.createElement(
							_Table.TableRow,
							{ key: row.id || rowIndex },
							headers.map(function (col, cellIndex) {
								return _react2.default.cloneElement(renderBodyCell(col, row, rowIndex, cellIndex), { key: cellIndex });
							}),
							showActions && _react2.default.createElement(
								_Table.TableRowColumn,
								null,
								_react2.default.createElement(_IsotopeTableMenu2.default, { actions: makeActions(row), element: row })
							)
						);
					})
				),
				_react2.default.createElement(
					_Table.TableFooter,
					null,
					_react2.default.createElement(
						_Table.TableRow,
						null,
						_react2.default.createElement(
							_Table.TableRowColumn,
							{
								style: _extends({}, styles.tableRowCol, { textAlign: paginationAlign }),
								colSpan: nbCols
							},
							_react2.default.createElement(
								'span',
								{ style: { paddingRight: 60, position: 'inherit' } },
								'Elements par page :',
								_react2.default.createElement(
									_SelectField2.default,
									{
										value: pageSize,
										onChange: this.handleSizeChange,
										underlineStyle: { display: 'none' },
										style: styles.select
									},
									pageSizes2.map(function (_pageSize) {
										return _react2.default.createElement(_MenuItem2.default, {
											key: _pageSize,
											value: _pageSize,
											primaryText: _pageSize,
											style: styles.perPage
										});
									})
								)
							),
							_react2.default.createElement(
								'span',
								{ style: { paddingLeft: 10, paddingRight: 20 } },
								totalElements > 0 ? NumberOfElementInf + ' - ' + NumberOfElementSup + ' sur ' + totalElements : ''
							),
							_react2.default.createElement(
								'span',
								null,
								!firstPage && _react2.default.createElement(
									'span',
									{
										onClick: this.handlePreviousPage
									},
									_react2.default.createElement(_keyboardArrowLeft2.default, { style: styles.hArrow })
								),
								!lastPage && _react2.default.createElement(
									'span',
									{
										onClick: this.handleNextPage
									},
									_react2.default.createElement(_keyboardArrowRight2.default, { style: styles.hArrow })
								)
							)
						)
					)
				)
			);
		}
	}]);

	return TableExampleComplex;
}(_react.Component);

TableExampleComplex.propTypes = {
	data: _react.PropTypes.array.isRequired,
	page: _react.PropTypes.number,
	pageSize: _react.PropTypes.number,
	sort: _react.PropTypes.array,
	totalPage: _react.PropTypes.number,
	headers: _react.PropTypes.arrayOf(_react.PropTypes.shape({
		key: _react.PropTypes.string.isRequired,
		name: _react.PropTypes.string,
		sortable: _react.PropTypes.bool,
		sorted: _react.PropTypes.oneOf([ASC, DESC]),
		render: _react.PropTypes.func,
		component: _react.PropTypes.element
	})),
	numberOfElements: _react.PropTypes.number,
	totalElements: _react.PropTypes.number,
	firstPage: _react.PropTypes.bool,
	lastPage: _react.PropTypes.bool,
	// mes ajouts
	totalPages: _react.PropTypes.number,
	pageSizes: _react.PropTypes.arrayOf(_react.PropTypes.number),
	paginationAlign: _react.PropTypes.oneOf(['right', 'left', 'center']),
	onPageChange: _react.PropTypes.func,
	onElementsPerPageChange: _react.PropTypes.func,
	onFilterChange: _react.PropTypes.func,
	showActions: _react.PropTypes.bool,
	makeActions: _react.PropTypes.func,
	//
	tableProps: _react.PropTypes.object,
	tableHeaderProps: _react.PropTypes.object,
	tableBodyProps: _react.PropTypes.object
};
TableExampleComplex.contextTypes = {
	muiTheme: _react.PropTypes.object.isRequired
};

TableExampleComplex.defaultProps = {
	headers: [],
	data: [],
	page: 1,
	pageSize: 10,
	totalPages: 1,
	firstPage: false,
	lastPage: false,
	numberOfElements: 0,
	totalElements: 0,
	pageSizes: [10, 20, 50],
	showActions: false,
	paginationAlign: 'right'
};

exports.default = TableExampleComplex;