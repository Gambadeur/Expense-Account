"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _Chip = require("material-ui/Chip");

var _Chip2 = _interopRequireDefault(_Chip);

var _IconButton = require("material-ui/IconButton");

var _IconButton2 = _interopRequireDefault(_IconButton);

var _Popover = require("material-ui/Popover/Popover");

var _Popover2 = _interopRequireDefault(_Popover);

var _add = require("material-ui/svg-icons/content/add");

var _add2 = _interopRequireDefault(_add);

var _Menu = require("material-ui/Menu");

var _Menu2 = _interopRequireDefault(_Menu);

var _MenuItem = require("material-ui/MenuItem");

var _MenuItem2 = _interopRequireDefault(_MenuItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
	chip: {
		margin: 4
	},
	wrapper: {
		display: 'flex',
		flexWrap: 'wrap'
	}
};

var MultipleChoice = function (_Component) {
	_inherits(MultipleChoice, _Component);

	function MultipleChoice(props) {
		_classCallCheck(this, MultipleChoice);

		var _this = _possibleConstructorReturn(this, (MultipleChoice.__proto__ || Object.getPrototypeOf(MultipleChoice)).call(this, props));

		_this.state = {
			disponibles: _this.props.liste,
			openAdd: false
		};
		_this.handleRequestClose = _this.handleRequestClose.bind(_this);
		_this.ajouterChip = _this.ajouterChip.bind(_this);
		_this.supprimerChip = _this.supprimerChip.bind(_this);
		_this.handleTouchTap = _this.handleTouchTap.bind(_this);
		return _this;
	}

	_createClass(MultipleChoice, [{
		key: "componentWillReceiveProps",
		value: function componentWillReceiveProps(nextProps) {
			var liste = nextProps.liste,
			    value = nextProps.value;

			if (liste) {
				var disponibles = void 0;
				if (value) {
					disponibles = liste.filter(function (dispo) {
						for (var indexChip = 0; indexChip < value.length; indexChip++) {
							var chip = value[indexChip];
							if (dispo.id === chip.id) return false;
						}
						return true;
					});
				} else {
					disponibles = liste;
				}
				this.setState(_extends({}, this.state, {
					openAdd: this.state.openAdd && disponibles.length > 0,
					disponibles: disponibles
				}));
			}
		}
	}, {
		key: "handleTouchTap",
		value: function handleTouchTap(event) {
			event.preventDefault();
			if (this.state.disponibles.length > 0) {
				this.setState(_extends({}, this.state, {
					openAdd: true,
					anchorEl: event.currentTarget
				}));
			}
		}
	}, {
		key: "handleRequestClose",
		value: function handleRequestClose() {
			this.setState(_extends({}, this.state, {
				openAdd: false
			}));
		}
	}, {
		key: "supprimerChip",
		value: function supprimerChip(chip, onChange) {
			var value = this.props.value;

			onChange(value.filter(function (dispo) {
				return dispo !== chip;
			}));
		}
	}, {
		key: "ajouterChip",
		value: function ajouterChip(element, onChange) {
			var value = this.props.value;

			if (!value) value = [];
			value.push(element);
			onChange(value);
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    title = _props.title,
			    onChange = _props.onChange,
			    value = _props.value,
			    stylePopover = _props.stylePopover;
			var muiTheme = this.context.muiTheme;


			var internalStyles = {
				controls: {
					display: 'flex',
					width: '100%',
					height: '100%',
					alignItems: 'center'
				},
				label: {
					float: 'left',
					position: 'relative',
					display: 'block',
					lineHeight: '24px',
					color: muiTheme.palette.textColor,
					fontFamily: muiTheme.fontFamily
				},
				root: {
					position: 'relative',
					cursor: 'pointer',
					overflow: 'visible',
					display: 'table',
					height: 'auto',
					width: '100%'
				}
			};

			return _react2.default.createElement(
				"div",
				{ style: internalStyles.root },
				_react2.default.createElement(
					"div",
					{ style: internalStyles.controls },
					_react2.default.createElement(
						"label",
						{ style: internalStyles.label },
						title
					),
					_react2.default.createElement(
						_IconButton2.default,
						{
							disabled: !this.state.disponibles || this.state.disponibles.length === 0,
							onTouchTap: this.handleTouchTap
						},
						_react2.default.createElement(_add2.default, { color: muiTheme.palette.primary1Color })
					),
					_react2.default.createElement(
						_Popover2.default,
						{
							style: _extends({ overflowY: 'scroll' }, stylePopover),
							open: this.state.openAdd,
							anchorEl: this.state.anchorEl,
							onRequestClose: this.handleRequestClose
						},
						_react2.default.createElement(
							_Menu2.default,
							{ desktop: true },
							this.state.disponibles.map(function (element, index) {
								return _react2.default.createElement(_MenuItem2.default, {
									key: element.id || index,
									value: element.id || element,
									primaryText: element.libelle || element,
									onTouchTap: function onTouchTap() {
										return _this2.ajouterChip(element, onChange);
									}
								});
							})
						)
					)
				),
				value.length > 0 && _react2.default.createElement(
					"div",
					{ style: styles.wrapper },
					value.map(function (chip, index) {
						return _react2.default.createElement(
							_Chip2.default,
							{
								style: styles.chip,
								key: chip.id || index,
								onRequestDelete: function onRequestDelete() {
									return _this2.supprimerChip(chip, onChange);
								},
								onTouchTap: function onTouchTap() {
									return _this2.supprimerChip(chip, onChange);
								}
							},
							chip.libelle
						);
					})
				)
			);
		}
	}]);

	return MultipleChoice;
}(_react.Component);

MultipleChoice.propTypes = {
	liste: _react.PropTypes.array.isRequired,
	title: _react.PropTypes.string.isRequired,
	stylePopover: _react.PropTypes.object
};

MultipleChoice.contextTypes = {
	muiTheme: _react.PropTypes.object.isRequired
};

exports.default = MultipleChoice;