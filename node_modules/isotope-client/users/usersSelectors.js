'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getEditingUser = exports.getUserById = exports.getUsers = exports.getIdDeletingUser = undefined;

var _reselect = require('reselect');

var getLocalState = function getLocalState(state) {
	return state.users;
};

var getUsersById = function getUsersById(state) {
	return getLocalState(state).byId;
};

var getAllUsersIds = function getAllUsersIds(state) {
	return getLocalState(state).allIds;
};

var getIdEditingUser = function getIdEditingUser(state) {
	return getLocalState(state).idEditingUser;
};

var getIdDeletingUser = exports.getIdDeletingUser = function getIdDeletingUser(state) {
	return getLocalState(state).idDeletingUser;
};

/**
 * Récupère tous les utilisateurs
 * @param {Object} state
 * @returns {Array<User>} users
 */
var getUsers = exports.getUsers = (0, _reselect.createSelector)(getUsersById, getAllUsersIds, function (usersById, allIds) {
	return allIds.map(function (id) {
		return usersById[id];
	});
});

/**
 * Récupère un user par son id
 * @param {Object} state global
 * @param {Number} id de l'utilisateur que l'on veut
 * @returns {User} le "user"
 */
var getUserById = exports.getUserById = function getUserById(state, id) {
	return getUsersById(state)[id];
};

/**
 * Récupère le user en cours d'édition
 * @param {Object} state global
 */
var getEditingUser = exports.getEditingUser = (0, _reselect.createSelector)(getLocalState, getUsersById, getIdEditingUser, function (state, users, id) {
	if (id > 0) {
		return users[id];
	}
	if (id === -1) {
		return {};
	}
	return undefined;
});